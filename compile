#!/usr/bin/python3

import argparse
from os import listdir
from os.path import isfile
import sys

##################################################################################
#
# functions
#
##################################################################################

def update_sidebar():
    filenames = ['index.html', 'about/about.html', 'todo/todo.html', 'reports/reports.html', 'presentations/presentations.html']
    for filename in listdir('reports'):
        if filename[-5:] == '.html' and filename[:6] == 'report':
            if filename[6:6+8].isnumeric():
                filenames.append('reports/' + filename)
    
    for filename in filenames:
        file = open(filename, 'r')
        text = file.read()
        file.close()
        file = open('frame/sidebar.html', 'r')
        sidebar_text = file.read()
        file.close()

        start_token = '<div id="side-bar" class="side-bar">'
        end_token = '</div>'
        start = text.find(start_token) + len(start_token)
        end = text.find(end_token, start)

        new_text = text[:start] + '\n' + sidebar_text + text[end:]

        file = open(filename, 'w')
        file.write(new_text)
        file.close()

        print('Sidebar updated: %s' % filename)
    return

def get_report_dates():
    dates = []
    for filename in listdir('reports'):
        if filename[-5:] == '.html' and filename[:6] == 'report':
            if filename[6:6+8].isnumeric():
                dates.append(filename[6:6+8])
    dates.sort()
    return dates

def update_index():
    filename = 'report' + get_report_dates()[-1]
    file = open('reports/' + filename + '.html', 'r')
    text = file.read()
    file.close()

    text = text.replace('../', './')
    text = text.replace(filename, 'reports/' + filename)

    file = open('index.html', 'w')
    file.write(text)
    file.close()

    print('Updated index.html to %s' % filename)
    return
    

##################################################################################
#
# main
#
##################################################################################
if __name__=='__main__':
    help_message = '''
    Compile the most recent report of the form "reportYYYYMMDD.html" and replace the homepage with it. 

    All files should be referenced via ./ for the links to function properly on the homepage (except the sidebar which uses ../reports/ for proper linking).
    '''
    parser = argparse.ArgumentParser(description=help_message)
    parser.add_argument('--sidebar', '-s', action='store_const', default=False, const=True)

    args = parser.parse_args()

    if args.sidebar:
        print('Updating sidebars')
        update_sidebar()
        print('Finished updating sidebars\n')

    update_index()
    print('complte')
