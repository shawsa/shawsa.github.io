[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sage Shaw",
    "section": "",
    "text": "Mathematician turned data scientist.\n\nOpen to work!\nI want to do meaningful collaborative work that has a positive impact and leverages my background in mathematics and scientific computing. I love to code, I love to learn, and I love to teach. It’s important to me to continuously improve and to take the time to help others improve too.\nIf you’re interested in hiring me, send me an email!\n\n\nodeiter now has documentation\nodeiter is a python package for solving systems of differential equations using generators. Generators decouple the iteration from the looping body. This allows you to loop over the solution directly, and separtes the solve code (handled by odeiter) from the code you write to do something productive with the solution.\n\n\n\nSimultaneous Solves"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "Cortical Simulation\n\n\n\n\n\nCortical Simulation\n\n\n\n\n\nArXiv (2025) (submitted to SISC)\nWe present a numerical framework for solving neural field equations on surfaces using Radial Basis Function (RBF) interpolation and quadrature. Neural field models describe the evolution of macroscopic brain activity, but modeling studies often overlook the complex geometry of curved cortical domains. Traditional numerical methods, such as finite element or spectral methods, can be computationally expensive and challenging to implement on irregular domains. In contrast, RBF-based methods provide a flexible alternative by offering interpolation and quadrature schemes that efficiently handle arbitrary geometries with high-order accuracy. We first develop an RBF-based interpolatory projection framework for neural field models on general surfaces. Quadrature for both flat and curved domains are derived in detail, ensuring high-order accuracy and stability as they depend on RBF hyperparameters (basis functions, augmenting polynomials, and stencil size). Through numerical experiments, we demonstrate the convergence of our method, highlighting its advantages over traditional approaches in terms of flexibility and accuracy. We conclude with an exposition of numerical simulations of spatiotemporal activity on complex surfaces, illustrating the method’s ability to capture complex wave propagation patterns.\n\n\n\nInterpolatory Projector\n\n\n\n\n\nJournal of Computational Neuroscience(2024)\nTraveling waves of neural activity emerge in cortical networks both spontaneously and in response to stimuli. The spatiotemporal structure of waves can indicate the information they encode and the physiological processes that sustain them. Here, we investigate the stimulus-response relationships of traveling waves emerging in adaptive neural fields as a model of visual motion processing. Neural field equations model the activity of cortical tissue as a continuum excitable medium, and adaptive processes provide negative feedback, generating localized activity patterns. Synaptic connectivity in our model is described by an integral kernel that weakens dynamically due to activity-dependent synaptic depression, leading to marginally stable traveling fronts (with attenuated backs) or pulses of a fixed speed. Our analysis quantifies how weak stimuli shift the relative position of these waves over time, characterized by a wave response function we obtain perturbatively. Persistent and continuously visible stimuli model moving visual objects. Intermittent flashes that hop across visual space can produce the experience of smooth apparent visual motion. Entrainment of waves to both kinds of moving stimuli are well characterized by our theory and numerical simulations, providing a mechanistic description of the perception of visual motion.\n\n\n\n\n\nMS Thesis(2019)\nPartial differential equations (PDEs) are used throughout science and engineering for modeling various phenomena. Solutions to PDEs cannot generally be represented analytically, and therefore must be approximated using numerical techniques; this is especially true for geometrically complex domains. Radial basis function generated finite differences (RBF-FD) is a recently developed mesh-free method for numerically solving PDEs that is robust, accurate, computationally efficient, and geometrically flexible. In the past seven years, RBF-FD methods have been developed for solving PDEs on surfaces, which have applications in biology, chemistry, geophysics, and computer graphics. These methods are advantageous, as they are mesh-free, operate on arbitrary configurations of points, and do not introduce artificial singularities, as surface parameterizations are known to do. In this thesis, we develop a new RBF-FD method that uses projections on the tangent plane to approximate the Laplace-Beltrami operator (surface Laplacian). We then compare this method to two other previously developed RBF-FD methods: the Projected Gradient method and the Hermite RBF-FD method, on a set of benchmark problems posed on the sphere and torus. We also provide guidelines for choosing the various parameters involved in the methods."
  },
  {
    "objectID": "publications.html#representing-stimulus-motion-with-waves-in-adaptive-neural-fields",
    "href": "publications.html#representing-stimulus-motion-with-waves-in-adaptive-neural-fields",
    "title": "Publications",
    "section": "",
    "text": "Journal of Computational Neuroscience(2024)\nTraveling waves of neural activity emerge in cortical networks both spontaneously and in response to stimuli. The spatiotemporal structure of waves can indicate the information they encode and the physiological processes that sustain them. Here, we investigate the stimulus-response relationships of traveling waves emerging in adaptive neural fields as a model of visual motion processing. Neural field equations model the activity of cortical tissue as a continuum excitable medium, and adaptive processes provide negative feedback, generating localized activity patterns. Synaptic connectivity in our model is described by an integral kernel that weakens dynamically due to activity-dependent synaptic depression, leading to marginally stable traveling fronts (with attenuated backs) or pulses of a fixed speed. Our analysis quantifies how weak stimuli shift the relative position of these waves over time, characterized by a wave response function we obtain perturbatively. Persistent and continuously visible stimuli model moving visual objects. Intermittent flashes that hop across visual space can produce the experience of smooth apparent visual motion. Entrainment of waves to both kinds of moving stimuli are well characterized by our theory and numerical simulations, providing a mechanistic description of the perception of visual motion.\n\n\n\n\n\nMS Thesis(2019)\nPartial differential equations (PDEs) are used throughout science and engineering for modeling various phenomena. Solutions to PDEs cannot generally be represented analytically, and therefore must be approximated using numerical techniques; this is especially true for geometrically complex domains. Radial basis function generated finite differences (RBF-FD) is a recently developed mesh-free method for numerically solving PDEs that is robust, accurate, computationally efficient, and geometrically flexible. In the past seven years, RBF-FD methods have been developed for solving PDEs on surfaces, which have applications in biology, chemistry, geophysics, and computer graphics. These methods are advantageous, as they are mesh-free, operate on arbitrary configurations of points, and do not introduce artificial singularities, as surface parameterizations are known to do. In this thesis, we develop a new RBF-FD method that uses projections on the tangent plane to approximate the Laplace-Beltrami operator (surface Laplacian). We then compare this method to two other previously developed RBF-FD methods: the Projected Gradient method and the Hermite RBF-FD method, on a set of benchmark problems posed on the sphere and torus. We also provide guidelines for choosing the various parameters involved in the methods."
  },
  {
    "objectID": "software.html",
    "href": "software.html",
    "title": "Software",
    "section": "",
    "text": "odeiter\nA python package for solving systems of differential equations using generators. Generators decouple the iteration from the looping body. This allows you to loop over the solution directly, and separtes the solve code (handled by odeiter) from the code you write to do something productive with the solution.\n\n\n\nSimultaneous Solves\n\n\n\n\nNeural Fields RBF\nA framework for solving neural field equations on realistic cortical surfaces. This is the implementation for the paper Radial Basis Function Techniques for Neural Field Models on Surfaces.\n\n\n\nCortical Simulation"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Sage Shaw",
    "section": "",
    "text": "I am an applied mathematician turned data scientist with a strong background in mathematics and software development.\nI’ve spent the last eight years pursuing a career as an academic mathematician and am looking to begin my career as a data scientist. Why the change? I have always been strongly motivated by my ethics, and I believe that I can do more good for more people by working outside of the academy.\nAs a mathematician, I am an expert in recognizing and understanding patterns and I have the knowledge and skill to do so effectively. Furthermore, my eight years of teaching experience enables me to convey my understanding to others empowering us as a team. For example, it is useful to be able to recognize Simpson’s Paradox in a data set and to avoid concluding an erroneous correlation. It is even more useful to also teach a team that correlation of subsets does not always imply correlation of the whole, and to demonstrate this with a minimal data set and scatter plot. For another example, when designing a class in software it is useful to recognize when the monoid pattern is advantageous. It is even more useful to be able to demonstrate this advantage by showing an example of method chaining in Pandas and how it makes code more readable and more flexible. Catch someone a fish and you’ll feed them for a day. Teachsomeone to fish… you know the adage. We can achieve more together than we can individually, and sharing knowledge is essential.\nI have a passion for computer programming, both as a vocation and as a hobby, and I love to learn. In particular, for the last 70+ years, computer scientists have been trying to answer the question “how should we structure our code” and I have learned from their mistakes and their triumphs. I understand how and when to use the Object Oriented and Functional paradigms. I am an advocate of the SOLID principles (except Liskov substitution). I use state-of-the-art development tools: Git, GitHub, uv, IPython, etc. In short, I write good code that is correct, flexible, robust, and practical.\nI love to do math, I love to code, and I love to teach. It’s important to me that my work has an impact on the world and improves the lives of people."
  }
]