[
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Sage Shaw - Mathematician / Data scientist",
    "section": "",
    "text": "I want to do meaningful collaborative work that has a positive impact and leverages my background in mathematics and scientific computing. I love to code, I love to learn, and I love to teach. It’s important to me to continuously improve and to take the time to help others improve too."
  },
  {
    "objectID": "resume.html#research-assistant-2017---2025",
    "href": "resume.html#research-assistant-2017---2025",
    "title": "Sage Shaw - Mathematician / Data scientist",
    "section": "Research Assistant (2017 - 2025)",
    "text": "Research Assistant (2017 - 2025)\n\nCU Boulder (2019 - 2025)\nBoise State (2017 - 2019)\n\nAs a graduate student I conducted scientific and mathematical research under the supervision of my advisors. By the end, I was initiating my own research projects and seeing them to completion, showing that I am now a self-sufficient researcher.\nSee my published research.\nRelevant Skills: Through this collective experience, I have attained the following skills:\n\nI am fluent in the Python scientific stack (NumPy, SciPy, SymPy, matplotlib, etc.)\nI design and implement algorithms to solve novel problems efficiently and robustly\nI create models that capture relevant features of the underlying domain\nI architect object oriented frameworks to implement, analyze, and test my models\nI utilize efficient data structures and fast algorithms\nI create professional figures for scientific publication\nI have 8 years of teaching experience and pride myself on my pedagogy and ethics"
  },
  {
    "objectID": "resume.html#associate-express-employment-professionals-2013---2017",
    "href": "resume.html#associate-express-employment-professionals-2013---2017",
    "title": "Sage Shaw - Mathematician / Data scientist",
    "section": "Associate: Express Employment Professionals (2013 - 2017)",
    "text": "Associate: Express Employment Professionals (2013 - 2017)\nIn addition to my administrative duties, I would automate processes with Excel/VBA and other Microsoft products. Often my results would impress clients enough to extend my contracts indefinitely, and extend my duties to encompass automation.\nAccomplishments:\n\nAutomated a weekly 2-hour Excel task estimated to save $50k annually\nCreate a swarm of web-crawlers using Excel/VBA and VBScript to resolve errors in the company’s web portal, saving approximately 4 man-hours per day\nCreated a web crawler and simulated mouse input to automate data aggregation on a web-based data platform and generate meta-statistics justifying its use, saving approximately 8 man-hours per day (they called it RoboSage and it replaced me when I left)\nCreated an Excel/VBA application for identifying relevant construction bids, reporting information to estimators, and when approved; automatically creating a project directory, copping files, and creating a OneNote notebook populated with project data.\nWrote SQL queries to enable faster, more accessible reporting."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Sage Shaw - Mathematician / Data Scientist",
    "section": "",
    "text": "I am an applied mathematician turned data scientist with a strong background in mathematics and a passion for computer programming. I like to teach, I love to learn, and I strive to improve the lives of the people around me."
  },
  {
    "objectID": "software.html",
    "href": "software.html",
    "title": "Software",
    "section": "",
    "text": "odeiter\nA python package for solving systems of differential equations using generators. Generators decouple the iteration from the looping body. This allows you to loop over the solution directly, and separates the solve code (handled by odeiter) from the code you write to do something productive with the solution.\n\n\n\nSimultaneous Solves\n\n\n\n\nNeural Fields RBF\nA framework for solving neural field equations on realistic cortical surfaces. This is the implementation for the paper Radial Basis Function Techniques for Neural Field Models on Surfaces.\n\n\n\nCortical Simulation"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "Approximating the effect of inputs and cortical geometry on wave propagation in neural fields\nPhD Thesis (2025)\nMy doctoral research focused on neural-field equations. These are integro-differential equations (similar to PDEs) that are useful for modeling neural activity at the tissue level. My dissertation is comprised of two parts.\nThe first part explores the dynamics of a specific neural field model that incorporates synaptic depression. This enables the model to support traveling pulse solutions and we explore the possibility of using these traveling pulses to encode the position of moving stimuli. The model successfully captures the apparent motion illusion - a phenomenon where a sequence of stationary stimuli is interpreted as a single moving object.\nIn the second part I analyse an algorithm for approximating solutions to neural field equations on realistic cortical surfaces. The algorithm uses radial basis function quadrature to approximate the spatial operator in the equations. Here is an example simulation on a realistic cortical surface.\n\n\n\nCortical Simulation\n\n\n\n\nRadial Basis Function Techniques for Neural Field Models on Surfaces\nArXiv (2025) (submitted to SISC)\nWe present a numerical framework for solving neural field equations on surfaces using Radial Basis Function (RBF) interpolation and quadrature. Neural field models describe the evolution of macroscopic brain activity, but modeling studies often overlook the complex geometry of curved cortical domains. Traditional numerical methods, such as finite element or spectral methods, can be computationally expensive and challenging to implement on irregular domains. In contrast, RBF-based methods provide a flexible alternative by offering interpolation and quadrature schemes that efficiently handle arbitrary geometries with high-order accuracy. We first develop an RBF-based interpolatory projection framework for neural field models on general surfaces. Quadrature for both flat and curved domains are derived in detail, ensuring high-order accuracy and stability as they depend on RBF hyper-parameters (basis functions, augmenting polynomials, and stencil size). Through numerical experiments, we demonstrate the convergence of our method, highlighting its advantages over traditional approaches in terms of flexibility and accuracy. We conclude with an exposition of numerical simulations of spatiotemporal activity on complex surfaces, illustrating the method’s ability to capture complex wave propagation patterns.\n\n\n\nInterpolatory Projector\n\n\n\n\nRepresenting stimulus motion with waves in adaptive neural fields\nJournal of Computational Neuroscience(2024)\nTraveling waves of neural activity emerge in cortical networks both spontaneously and in response to stimuli. The spatio-temporal structure of waves can indicate the information they encode and the physiological processes that sustain them. Here, we investigate the stimulus-response relationships of traveling waves emerging in adaptive neural fields as a model of visual motion processing. Neural field equations model the activity of cortical tissue as a continuum excitable medium, and adaptive processes provide negative feedback, generating localized activity patterns. Synaptic connectivity in our model is described by an integral kernel that weakens dynamically due to activity-dependent synaptic depression, leading to marginally stable traveling fronts (with attenuated backs) or pulses of a fixed speed. Our analysis quantifies how weak stimuli shift the relative position of these waves over time, characterized by a wave response function we obtain perturbatively. Persistent and continuously visible stimuli model moving visual objects. Intermittent flashes that hop across visual space can produce the experience of smooth apparent visual motion. Entrainment of waves to both kinds of moving stimuli are well characterized by our theory and numerical simulations, providing a mechanistic description of the perception of visual motion.\n\n\n\n\n\nRadial Basis Function Finite Difference Approximations of the Laplace-Beltrami Operator\nMS Thesis(2019)\nPartial differential equations (PDEs) are used throughout science and engineering for modeling various phenomena. Solutions to PDEs cannot generally be represented analytically, and therefore must be approximated using numerical techniques; this is especially true for geometrically complex domains. Radial basis function generated finite differences (RBF-FD) is a recently developed mesh-free method for numerically solving PDEs that is robust, accurate, computationally efficient, and geometrically flexible. In the past seven years, RBF-FD methods have been developed for solving PDEs on surfaces, which have applications in biology, chemistry, geophysics, and computer graphics. These methods are advantageous, as they are mesh-free, operate on arbitrary configurations of points, and do not introduce artificial singularities, as surface parameterizations are known to do. In this thesis, we develop a new RBF-FD method that uses projections on the tangent plane to approximate the Laplace-Beltrami operator (surface Laplacian). We then compare this method to two other previously developed RBF-FD methods: the Projected Gradient method and the Hermite RBF-FD method, on a set of benchmark problems posed on the sphere and torus. We also provide guidelines for choosing the various parameters involved in the methods."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sage Shaw - Mathematician / Data scientist",
    "section": "",
    "text": "Open to work!\nI’m looking for a Data Scientist position. Take a look at my resume to see if I would be a good fit for your company or organization. If you’re interested in hiring me, send me an email!\n\n\nMy package odeiter now has documentation\nodeiter is a python package for solving systems of differential equations using generators. Generators decouple the iteration from the looping body. This allows you to loop over the solution directly, and separates the solve code (handled by odeiter) from the code you write to do something productive with the solution.\n\n\n\nAn animation of the solution and error of several simultaneous solves using different time-integrators."
  }
]